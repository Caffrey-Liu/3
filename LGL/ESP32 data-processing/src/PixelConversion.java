import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

/**
 * @author Caffrey-Liu
 */
public class PixelConversion {

    static float [][] TemData = {
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,15,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,10,10,12,0,0,0,0,0,0,3,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,15,10,10,15,0,0,0,0,0,0,3,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,15,11,10,14,14,0,0,0,0,15,11,10,9,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,10,10,11,0,0,0,0,15,11,10,12,10,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,15,10,15,0,0,0,0,15,11,10,11,11,11,15,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,15,10,14,0,0,0,14,11,10,0,0,0,11,11,15,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,15,10,4,5,15,5,5,4,10,10,11,4,4,5,15,6,5,11,15,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,15,15,15,6,5,5,4,6,0,6,5,5,5,6,15,15,15,11,15,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,15,7,5,4,5,5,5,5,5,5,5,5,5,6,15,10,15,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,6,10,6,6,6,7,4,4,4,6,6,6,6,9,11,10,9,15,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,13,14,6,13,13,13,14,13,13,14,14,13,5,13,11,15,15,10,15,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,7,8,5,5,5,6,4,5,5,6,5,5,5,8,11,10,10,10,11,15,0,0,0,0},
            {0,0,0,0,0,0,0,0,11,5,14,9,5,5,8,8,9,5,5,9,14,15,1,11,11,13,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,15,8,5,15,15,15,5,8,15,0,0,0,15,15,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,15,12,0,0,0,12,15,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}

    };


    private static int[][] Conversion(float[][] Temptable){
        int [][] Temp = new int[24][32];
        for (int i = 0; i < 24; i++)
        {
            for (int j = 0; j < 32; j++)
            {
                Temp[i][j] = ChangeColor(Temptable[i][j]);
            }
        }
        return Temp;
    }

    private static int ChangeColor(float Tem){
        int Temp;
        int red = 0, green = 0, blue = 0;
        if ((Tem>=0) && (Tem<=63)) {
            blue = (int)(Tem / 64 * 255);
        }
        else if ((Tem>=64) && (Tem<=127)) {
            green = (int)((Tem - 64) / 64 * 255);
            blue = (int)((127 - Tem) / 64 * 255);
        }
        else if ((Tem>=128) && (Tem<=191)) {
            red = (int)((Tem - 128) / 64 * 255);
            green = 255;
            blue = 0;
        }
        else if ((Tem>=192) && (Tem<=255)) {
            red = 255;
            green = (int)((255 - Tem) / 64 * 255);
            blue = 0;
        }
        Temp = (red << 16) + (green <<8) + blue;
        return Temp;
    }

    public static void GetPicture(String Path, BufferedImage image, int[][] RGB){
        File file = new File(Path + "Picture.jpg");
        for (int i = 0; i < 24; i++) {
            for (int j = 0; j < 32; j++) {
                image.setRGB(j,i,RGB[i][j]);
            }
        }
        try {
            ImageIO.write(image, "jpg", file);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static void main(String args[])
    {
        for (int i = 0; i < 24; i++) {
            for (int j = 0; j < 32; j++) {
                TemData[i][j] *= 16;
                //System.out.print(TemData[i][j] + " ");
            }
           // System.out.println();
        }

        int [][] RGB = Conversion(TemData);

        String Path = "D:\\GITHUB\\333-334\\LGL\\ESP32 data-processing\\src\\";
        BufferedImage image = new BufferedImage(32,24,BufferedImage.TYPE_INT_RGB);

        GetPicture(Path,image,RGB);

    }

}
